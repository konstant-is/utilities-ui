{"version":3,"sources":["../src/logger.ts"],"sourcesContent":["// import { type Logger, pino } from 'pino'\n// import { PrettyOptions } from 'pino-pretty'\n\n// const prettyOptions: PrettyOptions = {\n//   colorize: true,\n//   ignore: 'pid,hostname',\n//   translateTime: 'SYS:HH:MM:ss',\n// }\n\n// export const logger = pino({\n//   transport: {\n//     target: 'pino-pretty',\n//     options: prettyOptions,\n//   },\n// })\n\n// // export const prettySyncLoggerDestination: PinoPretty.PrettyStream = build({\n// //   ...prettyOptions,\n// //   destination: 1, // stdout\n// //   sync: true,\n// // })\n\n// // export const defaultLoggerOptions: PinoPretty.PrettyStream = build(prettyOptions)\n\n// /**\n//  * Creates a logger instance with custom options.\n//  *\n//  * @param name - Name of the logger.\n//  * @param logger - Optional logger configuration or instance.\n//  * @returns A Pino logger instance.\n//  */\n// // export const getLogger = (\n// //   name = 'app',\n// //   logger?: 'sync' | { destination?: DestinationStream; options: pino.LoggerOptions },\n// // ): CustomLogger => {\n// //   if (!logger) {\n// //     return pino(defaultLoggerOptions)\n// //   }\n\n// //   // Synchronous logger used for CLI or bin scripts\n// //   if (logger === 'sync') {\n// //     return pino(prettySyncLoggerDestination)\n// //   }\n\n// //   // Custom logger configuration\n// //   if ('options' in logger) {\n// //     const { destination, options } = logger\n\n// //     if (!options.name) {\n// //       options.name = name\n// //     }\n\n// //     if (!options.enabled) {\n// //       options.enabled = process.env.DISABLE_LOGGING !== 'true'\n// //     }\n\n// //     return pino(options, destination)\n// //   } else {\n// //     // Instantiated logger\n// //     return logger\n// //   }\n// // }\n"],"names":[],"mappings":"AAAA,2CAA2C;AAC3C,8CAA8C;AAE9C,yCAAyC;AACzC,oBAAoB;AACpB,4BAA4B;AAC5B,mCAAmC;AACnC,IAAI;AAEJ,+BAA+B;AAC/B,iBAAiB;AACjB,6BAA6B;AAC7B,8BAA8B;AAC9B,OAAO;AACP,KAAK;AAEL,iFAAiF;AACjF,yBAAyB;AACzB,iCAAiC;AACjC,mBAAmB;AACnB,QAAQ;AAER,uFAAuF;AAEvF,MAAM;AACN,oDAAoD;AACpD,KAAK;AACL,uCAAuC;AACvC,gEAAgE;AAChE,sCAAsC;AACtC,MAAM;AACN,gCAAgC;AAChC,qBAAqB;AACrB,2FAA2F;AAC3F,0BAA0B;AAC1B,sBAAsB;AACtB,2CAA2C;AAC3C,SAAS;AAET,yDAAyD;AACzD,gCAAgC;AAChC,kDAAkD;AAClD,SAAS;AAET,sCAAsC;AACtC,kCAAkC;AAClC,iDAAiD;AAEjD,8BAA8B;AAC9B,+BAA+B;AAC/B,WAAW;AAEX,iCAAiC;AACjC,oEAAoE;AACpE,WAAW;AAEX,2CAA2C;AAC3C,gBAAgB;AAChB,gCAAgC;AAChC,uBAAuB;AACvB,SAAS;AACT,OAAO"}