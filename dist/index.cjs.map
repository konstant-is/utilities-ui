{"version":3,"sources":["../src/index.ts","../src/canUseDOM.ts","../src/createObjectKeys.ts","../src/createQueryString.ts","../src/deepMerge.ts","../src/isReactComponent.ts","../src/isPlainObject.ts","../src/encoding.ts","../src/getNestedProperty.ts","../src/isNumber.ts","../src/logError.ts","../src/logger.ts","../src/mapAsync.ts","../src/getUrl.ts","../src/isObject.ts","../src/parseSearchParams.ts","../src/removeUndefined.ts","../src/stringFormat.ts"],"sourcesContent":["export * from './canUseDOM.js'\nexport * from './createObjectKeys.js'\nexport * from './createQueryString.js'\nexport * from './deepMerge.js'\nexport * from './encoding.js'\nexport * from './getNestedProperty.js'\nexport * from './isNumber.js'\nexport * from './isPlainObject.js'\nexport * from './isReactComponent.js'\nexport * from './logError.js'\nexport * from './logger.js'\nexport * from './mapAsync.js'\nexport * from './getUrl.js'\nexport * from './isObject.js'\nexport * from './parseSearchParams.js'\nexport * from './removeUndefined.js'\nexport * from './stringFormat.js'\n","export const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n)\n","// Utility type to extract keys that are strings from a union type\ntype ExtractKeys<T> = T extends string ? T : never\n\n/**\n * Creates an object where each key maps to its own name as a string.\n * @param keys - Array of keys to create the object from.\n * @returns An object where each key is assigned its own name as the value.\n */\nexport const createObjectKeys = <T extends string>(keys: ExtractKeys<T>[]): Record<T, string> => {\n  return keys.reduce(\n    (acc, key) => {\n      acc[key] = key // Assign the key to itself as the value\n      return acc\n    },\n    {} as Record<T, string>,\n  )\n}\n","import * as qs from 'qs-esm'\n\nexport const createQueryString = (query: any): string => {\n  return qs.stringify(query, { addQueryPrefix: true })\n}\n","import deepMerge from 'deepmerge'\n\nimport { isPlainObject } from './isPlainObject.js'\n\nexport { deepMerge }\n/**\n * Fully-featured deepMerge.\n *\n * Array handling: Arrays in the target object are combined with the source object's arrays.\n */\nexport function deepMergeWithCombinedArrays<T extends object>(\n  obj1: object,\n  obj2: object,\n  options: deepMerge.Options = {},\n): T {\n  return deepMerge<T>(obj1, obj2, {\n    arrayMerge: (target, source, options) => {\n      const destination = target.slice()\n\n      source.forEach((item, index) => {\n        if (typeof destination[index] === 'undefined') {\n          destination[index] = options?.cloneUnlessOtherwiseSpecified(item, options)\n        } else if (options?.isMergeableObject(item)) {\n          destination[index] = deepMerge(target[index], item, options)\n        } else if (target.indexOf(item) === -1) {\n          destination.push(item)\n        }\n      })\n      return destination\n    },\n    ...options,\n  })\n}\n\n/**\n * Fully-featured deepMerge.\n *\n * Array handling: Arrays in the target object are replaced by the source object's arrays.\n */\nexport function deepMergeWithSourceArrays<T extends object>(obj1: object, obj2: object): T {\n  return deepMerge<T>(obj1, obj2, { arrayMerge: (_, source) => source })\n}\n\n/**\n * Fully-featured deepMerge. Does not clone React components by default.\n */\nexport function deepMergeWithReactComponents<T extends object>(obj1: object, obj2: object): T {\n  return deepMerge<T>(obj1, obj2, {\n    isMergeableObject: isPlainObject,\n  })\n}\n","import type React from 'react'\n\nconst clientRefSymbol = Symbol.for('react.client.reference')\n\nexport function isReactServerComponentOrFunction<T extends any>(\n  component: any | React.ComponentType,\n): component is T {\n  if (component === null || component === undefined) {\n    return false\n  }\n  const hasClientComponentSymbol = component.$$typeof == clientRefSymbol\n\n  const isFunctionalComponent = typeof component === 'function'\n  // Anonymous functions are Client Components in Turbopack. RSCs should have a name\n  const isAnonymousFunction = typeof component === 'function' && component.name === ''\n\n  const isRSC = isFunctionalComponent && !isAnonymousFunction && !hasClientComponentSymbol\n\n  return isRSC\n}\n\nexport function isReactClientComponent<T extends any>(\n  component: any | React.ComponentType,\n): component is T {\n  if (component === null || component === undefined) {\n    return false\n  }\n  return !isReactServerComponentOrFunction(component) && component.$$typeof == clientRefSymbol\n}\n\nexport function isReactComponentOrFunction<T extends any>(\n  component: any | React.ComponentType,\n): component is T {\n  return isReactServerComponentOrFunction(component) || isReactClientComponent(component)\n}\n","import { isReactComponentOrFunction } from './isReactComponent.js'\n\nexport function isPlainObject(o: any): boolean {\n  // Is this a React component?\n  if (isReactComponentOrFunction(o)) {\n    return false\n  }\n\n  // from https://github.com/fastify/deepmerge/blob/master/index.js#L77\n  return typeof o === 'object' && o !== null && !(o instanceof RegExp) && !(o instanceof Date)\n}\n","/**\n * Decodes an array of URL-encoded strings.\n *\n * @param url - An array of URL-encoded strings.\n * @returns An array of decoded strings where each URL-encoded string is transformed into its decoded form.\n *\n * @example\n * // Decoding an array of URL-encoded strings\n * decodeUrl([\"Hello%20World\", \"How%27s%20it%20going\"]);\n * // Output: [\"Hello World\", \"How's it going\"]\n */\nexport const decodeUrl = (url: string[]): string[] => {\n  // Use the map function to iterate over each string in the array\n  // and apply the decodeURIComponent function to decode the string.\n  return url.map((s) => decodeURIComponent(s))\n}\n\n/**\n * Encodes a single string for use in a URL.\n *\n * @param url - A string to be URL-encoded.\n * @returns A URL-encoded version of the input string.\n *\n * @example\n * // Encoding a string for use in a URL\n * encodeUrl(\"Hello World\");\n * // Output: \"Hello%20World\"\n */\nexport const encodeUrl = (url: string): string => {\n  // Encode a single string\n  return encodeURIComponent(url)\n}\n","// @ts-nocheck\n\n/**\n * Get a deeply nested property of an object based on a dot-separated path.\n * @param obj - The object to traverse.\n * @param path - Dot-separated string representing the path to the property.\n * @returns The value at the specified path or undefined if the path does not exist.\n */\nexport const getNestedProperty = (obj: Record<string, unknown>, path: string): any => {\n  return path\n    .split('.') // Split the path into individual keys\n    .reduce(\n      (acc, key) => (acc && typeof acc === 'object' && key in acc ? acc[key] : undefined),\n      obj,\n    ) // Traverse the object based on the keys\n}\n","export function isNumber(value: unknown): value is number {\n  if (value === null || value === undefined || (typeof value === 'string' && value.trim() === '')) {\n    return false\n  }\n\n  return !Number.isNaN(Number(value))\n}\n","import type pino from 'pino'\n\ninterface LoggerConfig {\n  loggingLevels: Record<string, pino.Level | false>\n  logger: pino.Logger\n}\n\nexport const logError = ({ err, config }: { err: unknown; config: LoggerConfig }): void => {\n  let level: false | pino.Level = 'error'\n\n  if (\n    err &&\n    typeof err === 'object' &&\n    'name' in err &&\n    typeof err.name === 'string' &&\n    typeof config.loggingLevels[err.name] !== 'undefined'\n  ) {\n    level = config.loggingLevels[err.name]\n  }\n\n  if (level) {\n    const logObject: { err?: unknown; msg?: unknown } = {}\n\n    if (level === 'info') {\n      logObject.msg = err && typeof err === 'object' && 'message' in err ? err.message : 'Error'\n    } else {\n      logObject.err = err ?? 'Unknown error' // Handle undefined or null error\n    }\n\n    config.logger[level](logObject)\n  }\n}\n","import { type Logger, pino } from 'pino'\nimport { PrettyOptions } from 'pino-pretty'\n\nconst prettyOptions: PrettyOptions = {\n  colorize: true,\n  ignore: 'pid,hostname',\n  translateTime: 'SYS:HH:MM:ss',\n}\n\nexport const logger = pino({\n  transport: {\n    target: 'pino-pretty',\n    options: prettyOptions,\n  },\n})\n\n// export const prettySyncLoggerDestination: PinoPretty.PrettyStream = build({\n//   ...prettyOptions,\n//   destination: 1, // stdout\n//   sync: true,\n// })\n\n// export const defaultLoggerOptions: PinoPretty.PrettyStream = build(prettyOptions)\n\n/**\n * Creates a logger instance with custom options.\n *\n * @param name - Name of the logger.\n * @param logger - Optional logger configuration or instance.\n * @returns A Pino logger instance.\n */\n// export const getLogger = (\n//   name = 'app',\n//   logger?: 'sync' | { destination?: DestinationStream; options: pino.LoggerOptions },\n// ): CustomLogger => {\n//   if (!logger) {\n//     return pino(defaultLoggerOptions)\n//   }\n\n//   // Synchronous logger used for CLI or bin scripts\n//   if (logger === 'sync') {\n//     return pino(prettySyncLoggerDestination)\n//   }\n\n//   // Custom logger configuration\n//   if ('options' in logger) {\n//     const { destination, options } = logger\n\n//     if (!options.name) {\n//       options.name = name\n//     }\n\n//     if (!options.enabled) {\n//       options.enabled = process.env.DISABLE_LOGGING !== 'true'\n//     }\n\n//     return pino(options, destination)\n//   } else {\n//     // Instantiated logger\n//     return logger\n//   }\n// }\n","export async function mapAsync<T, U>(\n  arr: T[],\n  callbackfn: (item: T, index: number, array: T[]) => Promise<U>,\n): Promise<U[]> {\n  return Promise.all(arr.map(callbackfn))\n}\n","import { canUseDOM } from './canUseDOM.js'\n\nexport const getServerSideURL = () => {\n  let url = process.env.NEXT_PUBLIC_SERVER_URL\n\n  if (!url && process.env.VERCEL_PROJECT_PRODUCTION_URL) {\n    return `https://${process.env.VERCEL_PROJECT_PRODUCTION_URL}`\n  }\n\n  if (!url) {\n    url = 'http://localhost:3000'\n  }\n\n  return url\n}\n\nexport const getClientSideURL = () => {\n  if (canUseDOM) {\n    const protocol = window.location.protocol\n    const domain = window.location.hostname\n    const port = window.location.port\n\n    return `${protocol}//${domain}${port ? `:${port}` : ''}`\n  }\n\n  if (process.env.VERCEL_PROJECT_PRODUCTION_URL) {\n    return `https://${process.env.VERCEL_PROJECT_PRODUCTION_URL}`\n  }\n\n  return process.env.NEXT_PUBLIC_SERVER_URL || ''\n}\n","/**\n * Checks if the given item is a plain object (not an array, null, or primitive).\n * @param item - The item to check.\n * @returns True if the item is an object, otherwise false.\n */\nexport function isObject(item: unknown): boolean {\n  return item !== null && typeof item === 'object' && !Array.isArray(item)\n}\n","import type { ReadonlyURLSearchParams } from 'next/navigation.js'\n\nimport * as qs from 'qs-esm'\n\n/**\n * A utility function to parse URLSearchParams into a ParsedQs object.\n * This function is a wrapper around the `qs` library.\n * In Next.js, the `useSearchParams()` hook from `next/navigation` returns a `URLSearchParams` object.\n * This function can be used to parse that object into a more usable format.\n * @param {ReadonlyURLSearchParams} searchParams - The URLSearchParams object to parse.\n * @returns {qs.ParsedQs} - The parsed query string object.\n */\nexport function parseSearchParams(searchParams: ReadonlyURLSearchParams): qs.ParsedQs {\n  const search = searchParams.toString()\n\n  return qs.parse(search, {\n    depth: 10,\n    ignoreQueryPrefix: true,\n  })\n}\n","export function removeUndefined<T extends object>(obj: T): T {\n  return Object.fromEntries(Object.entries(obj).filter(([, value]) => value !== undefined)) as T\n}\n","import * as s from 'slugify'\n\n/**\n * Truncates a string to the specified length and adds an ellipsis.\n * @param str\n * @param length\n * @returns\n */\nexport const truncate = (str: string = '', length: number = 100): string => {\n  if (str.length <= length) return str\n  return str.slice(0, length) + '...'\n}\n\n/**\n * Checks if a string contains another string (case-insensitive).\n * @param str\n * @param search\n * @returns\n */\nexport const contains = (str: string = '', search: string): boolean => {\n  return str.toLowerCase().includes(search.toLowerCase())\n}\n\n// Fallback for CommonJS or ESM default export\nexport const slugify = s.default || s\n\n/**\n * Capitalizes the first letter\n * @param str\n * @returns\n */\nexport const toCapitalized = (str: string = ''): string => {\n  if (!str.length) {\n    return ''\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport const toKebabCase = (string: string): string =>\n  string\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\s+/g, '-')\n    .toLowerCase()\n"],"mappings":"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","names":["deepMerge","deepMerge","options","s","qs"]}