{"version":3,"sources":["../src/createObjectKeys.ts"],"sourcesContent":["// Utility type to extract keys that are strings from a union type\ntype ExtractKeys<T> = T extends string ? T : never\n\n/**\n * Creates an object where each key maps to its own name as a string.\n * @param keys - Array of keys to create the object from.\n * @returns An object where each key is assigned its own name as the value.\n */\nexport const createObjectKeys = <T extends string>(keys: ExtractKeys<T>[]): Record<T, string> => {\n  return keys.reduce(\n    (acc, key) => {\n      acc[key] = key // Assign the key to itself as the value\n      return acc\n    },\n    {} as Record<T, string>,\n  )\n}\n"],"names":["createObjectKeys","keys","reduce","acc","key"],"mappings":"AAAA,kEAAkE;AAGlE;;;;CAIC,GACD,OAAO,MAAMA,mBAAmB,CAAmBC;IACjD,OAAOA,KAAKC,MAAM,CAChB,CAACC,KAAKC;QACJD,GAAG,CAACC,IAAI,GAAGA,IAAI,wCAAwC;;QACvD,OAAOD;IACT,GACA,CAAC;AAEL,EAAC"}