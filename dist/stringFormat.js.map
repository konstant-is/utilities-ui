{"version":3,"sources":["../src/stringFormat.ts"],"sourcesContent":["import * as s from 'slugify'\n\n/**\n * Truncates a string to the specified length and adds an ellipsis.\n * @param str\n * @param length\n * @returns\n */\nexport const truncate = (str: string = '', length: number = 100): string => {\n  if (str.length <= length) return str\n  return str.slice(0, length) + '...'\n}\n\n/**\n * Checks if a string contains another string (case-insensitive).\n * @param str\n * @param search\n * @returns\n */\nexport const contains = (str: string = '', search: string): boolean => {\n  return str.toLowerCase().includes(search.toLowerCase())\n}\n\n// Fallback for CommonJS or ESM default export\nexport const slugify = s.default || s\n\n/**\n * Capitalizes the first letter\n * @param str\n * @returns\n */\nexport const toCapitalized = (str: string = ''): string => {\n  if (!str.length) {\n    return ''\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport const toKebabCase = (string: string): string =>\n  string\n    .replace(/([a-z])([A-Z])/g, '$1-$2')\n    .replace(/\\s+/g, '-')\n    .toLowerCase()\n"],"names":["s","truncate","str","length","slice","contains","search","toLowerCase","includes","slugify","default","toCapitalized","charAt","toUpperCase","toKebabCase","string","replace"],"mappings":"AAAA,YAAYA,OAAO,UAAS;AAE5B;;;;;CAKC,GACD,OAAO,MAAMC,WAAW,CAACC,MAAc,EAAE,EAAEC,SAAiB,GAAG;IAC7D,IAAID,IAAIC,MAAM,IAAIA,QAAQ,OAAOD;IACjC,OAAOA,IAAIE,KAAK,CAAC,GAAGD,UAAU;AAChC,EAAC;AAED;;;;;CAKC,GACD,OAAO,MAAME,WAAW,CAACH,MAAc,EAAE,EAAEI;IACzC,OAAOJ,IAAIK,WAAW,GAAGC,QAAQ,CAACF,OAAOC,WAAW;AACtD,EAAC;AAED,8CAA8C;AAC9C,OAAO,MAAME,UAAUT,EAAEU,OAAO,IAAIV,EAAC;AAErC;;;;CAIC,GACD,OAAO,MAAMW,gBAAgB,CAACT,MAAc,EAAE;IAC5C,IAAI,CAACA,IAAIC,MAAM,EAAE;QACf,OAAO;IACT;IAEA,OAAOD,IAAIU,MAAM,CAAC,GAAGC,WAAW,KAAKX,IAAIE,KAAK,CAAC;AACjD,EAAC;AAED,OAAO,MAAMU,cAAc,CAACC,SAC1BA,OACGC,OAAO,CAAC,mBAAmB,SAC3BA,OAAO,CAAC,QAAQ,KAChBT,WAAW,GAAE"}