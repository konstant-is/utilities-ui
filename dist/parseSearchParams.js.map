{"version":3,"sources":["../src/parseSearchParams.ts"],"sourcesContent":["import type { ReadonlyURLSearchParams } from 'next/navigation.js'\n\nimport * as qs from 'qs-esm'\n\n/**\n * A utility function to parse URLSearchParams into a ParsedQs object.\n * This function is a wrapper around the `qs` library.\n * In Next.js, the `useSearchParams()` hook from `next/navigation` returns a `URLSearchParams` object.\n * This function can be used to parse that object into a more usable format.\n * @param {ReadonlyURLSearchParams} searchParams - The URLSearchParams object to parse.\n * @returns {qs.ParsedQs} - The parsed query string object.\n */\nexport function parseSearchParams(searchParams: ReadonlyURLSearchParams): qs.ParsedQs {\n  const search = searchParams.toString()\n\n  return qs.parse(search, {\n    depth: 10,\n    ignoreQueryPrefix: true,\n  })\n}\n"],"names":["qs","parseSearchParams","searchParams","search","toString","parse","depth","ignoreQueryPrefix"],"mappings":"AAEA,YAAYA,QAAQ,SAAQ;AAE5B;;;;;;;CAOC,GACD,OAAO,SAASC,kBAAkBC,YAAqC;IACrE,MAAMC,SAASD,aAAaE,QAAQ;IAEpC,OAAOJ,GAAGK,KAAK,CAACF,QAAQ;QACtBG,OAAO;QACPC,mBAAmB;IACrB;AACF"}